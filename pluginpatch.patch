diff --git a/src/plugins.c b/src/plugins.c
index 6b620085..0f24102e 100644
--- a/src/plugins.c
+++ b/src/plugins.c
@@ -913,6 +913,17 @@
         int i;
         for (i = 0; i < n; i++)
         {
+            // Only search within /app/extensions, exactly one subfolder deep
+            if (strcmp(plugdir, "/app/extensions") == 0 &&
+                namelist[i]->d_type == DT_DIR &&
+                strcmp(namelist[i]->d_name, ".") != 0 &&
+                strcmp(namelist[i]->d_name, "..") != 0) {
+
+                char subdir[PATH_MAX];
+                snprintf(subdir, sizeof(subdir), "%s/%s", plugdir, namelist[i]->d_name);
+                load_plugin_dir(subdir, gui_scan); // Load only immediate subdirectories
+            }
+
             // skip hidden files and fallback plugins
             while (namelist[i]->d_name[0] != '.'
 #if !defined(ANDROID) && !defined(OSX_APPBUNDLE)
@@ -1065,7 +1076,7 @@
     }
 
     // load from HOME 1st, than replace from installdir if needed
-    const char *plugins_dirs[] = { xdg_plugin_dir_explicit_arch, xdg_plugin_dir, dirname, NULL };
+    const char *plugins_dirs[] = { "/app/extensions", xdg_plugin_dir_explicit_arch, xdg_plugin_dir, dirname, NULL };
 
     // If xdg_plugin_dir and dirname is the same, we should avoid each plugin
     // to be load twice.
@@ -1548,7 +1559,7 @@
 #ifdef OSX_APPBUNDLE
     conf_get_str ("output_plugin", "coreaudio", outplugname, sizeof (outplugname));
 #else
-    conf_get_str ("output_plugin", "alsa", outplugname, sizeof (outplugname));
+    conf_get_str ("output_plugin", "pulseaudio2", outplugname, sizeof (outplugname));
 #endif
     for (int i = 0; g_output_plugins[i]; i++) {
         DB_output_t *p = g_output_plugins[i];
